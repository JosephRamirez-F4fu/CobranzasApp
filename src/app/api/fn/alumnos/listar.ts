/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { ApiResponsePageAlumnoResponse } from '../../models/api-response-page-alumno-response';

export interface Listar$Params {

/**
 * Número de página
 */
  page?: number;

/**
 * Cantidad de elementos por página
 */
  size?: number;

/**
 * Configuración de ordenamiento en formato JSON
 */
  sort?: string;

/**
 * Filtrar por nombre completo
 */
  nombreCompleto?: string;

/**
 * Filtrar por DNI
 */
  dni?: string;

/**
 * Filtrar por grado
 */
  grado?: string;

/**
 * Filtrar por nivel educativo
 */
  nivel?: string;

/**
 * Filtrar por sección
 */
  seccion?: string;
}

export function listar(http: HttpClient, rootUrl: string, params?: Listar$Params, context?: HttpContext): Observable<StrictHttpResponse<ApiResponsePageAlumnoResponse>> {
  const rb = new RequestBuilder(rootUrl, listar.PATH, 'get');
  if (params) {
    rb.query('page', params.page, {});
    rb.query('size', params.size, {});
    rb.query('sort', params.sort, {});
    rb.query('nombreCompleto', params.nombreCompleto, {});
    rb.query('dni', params.dni, {});
    rb.query('grado', params.grado, {});
    rb.query('nivel', params.nivel, {});
    rb.query('seccion', params.seccion, {});
  }

  return http.request(
    rb.build({ responseType: 'blob', accept: '*/*', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<ApiResponsePageAlumnoResponse>;
    })
  );
}

listar.PATH = '/student';
