/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { ApiResponsePageUsuarioResponse } from '../../models/api-response-page-usuario-response';

export interface ListarUsuarios$Params {

/**
 * Número de página
 */
  page?: number;

/**
 * Cantidad de registros por página
 */
  size?: number;

/**
 * Configuración de ordenamiento en formato JSON
 */
  sort?: string;

/**
 * Filtrar por nombre del usuario
 */
  nombreCompleto?: string;

/**
 * Filtrar por correo del usuario
 */
  correo?: string;

/**
 * Filtrar por rol
 */
  rol?: string;

/**
 * Filtrar por estado activo
 */
  activo?: boolean;

/**
 * Filtrar por identificador de institución
 */
  institutionId?: number;
}

export function listarUsuarios(http: HttpClient, rootUrl: string, params?: ListarUsuarios$Params, context?: HttpContext): Observable<StrictHttpResponse<ApiResponsePageUsuarioResponse>> {
  const rb = new RequestBuilder(rootUrl, listarUsuarios.PATH, 'get');
  if (params) {
    rb.query('page', params.page, {});
    rb.query('size', params.size, {});
    rb.query('sort', params.sort, {});
    rb.query('nombreCompleto', params.nombreCompleto, {});
    rb.query('correo', params.correo, {});
    rb.query('rol', params.rol, {});
    rb.query('activo', params.activo, {});
    rb.query('institutionId', params.institutionId, {});
  }

  return http.request(
    rb.build({ responseType: 'blob', accept: '*/*', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<ApiResponsePageUsuarioResponse>;
    })
  );
}

listarUsuarios.PATH = '/usuario';
